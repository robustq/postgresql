- name: Repmgr | Detect primary
  shell: "set -o pipefail ; {{ postgresql_bin_directory }}/repmgr -f {{ repmgr_config_directory }}/repmgr.conf cluster show | grep primary | cut -d '|' -f 2 | sed 's/\ //g'"
  register: repmgr_primary_check
  become: yes
  become_user: postgres
  ignore_errors: True

- name: Repmgr | Declare as primary for existing installation
  set_fact:
    repmgr_primary: True
  register: repmgr_existing_installation_detected
  when: "repmgr_primary_check.rc == 0 and repmgr_primary_check.stdout == ansible_hostname"

- name: Repmgr | Share state between hosts
  delegate_to: localhost
  delegate_facts: True
  set_fact:
    repmgr_primary_declared: True
  when: "repmgr_existing_installation_detected is not skipped"

- name: Repmgr | Declare as primary for new installation
  set_fact:
    repmgr_primary: "{{ True if ansible_hostname == repmgr_master or inventory_hostname == repmgr_master else False }}"
  when: "hostvars['localhost'].get('repmgr_primary_declared', false) != true"

- debug:
    var: repmgr_primary

- debug:
    var: repmgr_primary_check
    verbosity: 1

- debug:
    var: repmgr_master

- debug:
    var: ansible_hostname
